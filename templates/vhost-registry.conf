## Lines starting with two hashes (##) are comments with information.
## Lines starting with one hash (#) are configuration parameters that can be uncommented.
##
###################################
##         configuration         ##
###################################

## Redirects all HTTP traffic to the HTTPS host
server {
  listen 80;
  server_name registry.{{ gitlab_fqdn }};
  server_tokens off;

  access_log /var/log/nginx/gitlab_access.log;
  error_log /var/log/nginx/gitlab_error.log;

  root /var/www/gitlab/;

  location /.well-known/ {
  }

  {% if gitlab_enable_ssl | default(true) | bool and ( gitlab_lecert.stat.exists or gitlab_lecert_adhoc.stat.exists ) %}
  location / {
    return 301 https://registry.{{ gitlab_fqdn }}$request_uri;
  }
  {% else %}
  location / {
    proxy_set_header  Host              $http_host;   # required for docker client's sake
    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_read_timeout                  900;

    proxy_pass          http://localhost:5000;
  }
  {% endif %}

}

{% if gitlab_enable_ssl | default(true) | bool and ( gitlab_lecert.stat.exists or gitlab_lecert_adhoc.stat.exists ) %}
## HTTPS host
server {
  listen 443 ssl http2;
  server_name registry.{{ gitlab_fqdn }};
  server_tokens off;

  client_max_body_size 0;
  chunked_transfer_encoding on;

  include common/secure-ssl.conf;
  ssl_certificate /etc/letsencrypt/live/{{ gitlab_fqdn }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ gitlab_fqdn }}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/{{ gitlab_fqdn }}/chain.pem;
  ssl_dhparam /etc/nginx/dhparam.pem;

  ## Individual nginx logs for this GitLab vhost
  access_log  /var/log/nginx/gitlab_access.log;
  error_log   /var/log/nginx/gitlab_error.log;

  location / {
    proxy_set_header  Host              $http_host;   # required for docker client's sake
    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_read_timeout                  900;

    proxy_pass          http://localhost:5000;
  }

}
{% endif %}
